(()=>{"use strict";var e={138:(e,r)=>{var t;Object.defineProperty(r,"__esModule",{value:!0}),r.FileType=void 0,function(e){e[e.SOURCE=0]="SOURCE",e[e.TEXT=1]="TEXT",e[e.HEADER=2]="HEADER"}(t||(r.FileType=t={}))},979:(e,r)=>{Object.defineProperty(r,"__esModule",{value:!0}),r.generateGUID=void 0,r.generateGUID=function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,(function(e){const r=16*Math.random()|0;return("x"===e?r:3&r|8).toString(16)}))}},238:(e,r,t)=>{Object.defineProperty(r,"__esModule",{value:!0}),r.generateVSProjectFiles=void 0;const n=t(496),o=t(147),i=t(17),c=t(979),a=t(138);function s(e){switch(i.extname(e)){case".cpp":return a.FileType.SOURCE;case".h":return a.FileType.HEADER;default:return a.FileType.TEXT}}r.generateVSProjectFiles=async function(){if(!n.workspace.name)return void n.window.showErrorMessage("No workspace is currently open.");const e=await n.window.showInputBox({prompt:"Enter the project name",value:n.workspace.name}),r=i.join(n.workspace.rootPath,e),t=i.join(r,e);try{o.mkdirSync(r,{recursive:!0}),o.mkdirSync(t,{recursive:!0})}catch(e){return void n.window.showErrorMessage("Error creating folders.")}try{!function(e,r,t){const n=i.join(__dirname,"assets");o.readdirSync(n).forEach((r=>{"template.sln"!==r&&r.startsWith("template.")&&o.copyFileSync(i.join(n,r),i.join(e,r))}));const c="template.sln";o.copyFileSync(i.join(n,c),i.join(r,c)),o.readdirSync(e).forEach((r=>{if(r.startsWith("template.")){const n=r.replace("template",t);o.renameSync(i.join(e,r),i.join(e,n))}}));const a=i.join(r,"template.sln"),s=i.join(r,`${t}.sln`);o.renameSync(a,s)}(t,r,e)}catch(e){return void n.window.showErrorMessage("Error copying files.")}try{!function(e,r){const t=i.join(r,`${e}.sln`);let n=o.readFileSync(t,"utf-8");n=n.replace(/NAME/g,e),n=n.replace(/PROJECTID/g,(0,c.generateGUID)()),n=n.replace(/SOLUTIONID/g,(0,c.generateGUID)()),o.writeFileSync(t,n,"utf-8")}(e,r)}catch(e){return void n.window.showErrorMessage("Error replacing IDs.")}try{!function(e,r){const t=[".cpp",".h",".dat",".txt"];o.readdirSync(e).forEach((n=>{const c=i.extname(n);t.includes(c)&&o.copyFileSync(i.join(e,n),i.join(r,n))}))}(n.workspace.rootPath,t)}catch(e){return void n.window.showErrorMessage("Error copying main files.")}try{!function(e,r){const t=[`${r}.vcxproj`,`${r}.vcxproj.filters`,`${r}.vcxproj.user`],n=o.readdirSync(e).filter((e=>!t.includes(e))).map((e=>({fileType:s(e),fileName:e})));const c=function(e,r){let t="\n  <ItemGroup>",n=t,o=t,i=t;for(let r of e)if(r)switch(r.fileType){case a.FileType.SOURCE:n+=`\n    <ClCompile Include="${r.fileName}">\n      <Filter>Source Files</Filter>\n    </ClCompile>`;break;case a.FileType.TEXT:o+=`\n    <Text Include="${r.fileName}">\n      <Filter>Source Files</Filter>\n    </Text>`;break;case a.FileType.HEADER:i+=`\n    <ClInclude Include="${r.fileName}">\n      <Filter>Header Files</Filter>\n    </ClInclude>`}return n!==t&&(n+="\n  </ItemGroup>",r+=n),o!==t&&(o+="\n  </ItemGroup>",r+=o),i!==t&&(i+="\n  </ItemGroup>",r+=i),r+="\n</Project>"}(n,""),l=function(e,r){let t="\n  <ItemGroup>",n=t,o=t,i=t;for(let r of e)if(r)switch(r.fileType){case a.FileType.SOURCE:n+=`\n    <ClCompile Include="${r.fileName}" />`;break;case a.FileType.TEXT:o+=`\n    <Text Include="${r.fileName}" />`;break;case a.FileType.HEADER:i+=`\n    <ClInclude Include="${r.fileName}" />`}return n!==t&&(n+="\n  </ItemGroup>",r+=n),o!==t&&(o+="\n  </ItemGroup>",r+=o),i!==t&&(i+="\n  </ItemGroup>",r+=i),r+='\n  <Import Project="$(VCTargetsPath)\\Microsoft.Cpp.targets" />\n  <ImportGroup Label="ExtensionTargets">\n  </ImportGroup>\n</Project>'}(n,"");o.appendFileSync(i.join(e,`${r}.vcxproj.filters`),c),o.appendFileSync(i.join(e,`${r}.vcxproj`),l)}(t,e)}catch(e){return void n.window.showErrorMessage("Error appending file types to filters.")}n.window.showInformationMessage("Visual Studio project files generated successfully")}},496:e=>{e.exports=require("vscode")},147:e=>{e.exports=require("fs")},17:e=>{e.exports=require("path")}},r={};function t(n){var o=r[n];if(void 0!==o)return o.exports;var i=r[n]={exports:{}};return e[n](i,i.exports,t),i.exports}var n={};(()=>{var e=n;Object.defineProperty(e,"__esModule",{value:!0}),e.deactivate=e.activate=void 0;const r=t(496),o=t(238);e.activate=function(e){let t=r.commands.registerCommand("extension.generateCppSolution",(async()=>{try{(0,o.generateVSProjectFiles)()}catch(e){r.window.showErrorMessage(`Error executing: ${e}`)}}));e.subscriptions.push(t)},e.deactivate=function(){}})(),module.exports=n})();