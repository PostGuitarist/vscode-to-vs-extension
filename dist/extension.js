(()=>{"use strict";var e={81:(e,r)=>{var n;Object.defineProperty(r,"__esModule",{value:!0}),r.FileType=void 0,function(e){e[e.SOURCE=0]="SOURCE",e[e.TEXT=1]="TEXT",e[e.HEADER=2]="HEADER"}(n||(r.FileType=n={}))},870:(e,r)=>{Object.defineProperty(r,"__esModule",{value:!0}),r.generateGUID=void 0,r.generateGUID=function(){return"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx".replace(/[xy]/g,(function(e){const r=16*Math.random()|0;return("x"===e?r:3&r|8).toString(16)}))}},984:(e,r,n)=>{Object.defineProperty(r,"__esModule",{value:!0}),r.generateVSProjectFiles=void 0;const t=n(398),o=n(896),i=n(928),c=n(870),a=n(81);function s(e){switch(i.extname(e)){case".cpp":return a.FileType.SOURCE;case".h":return a.FileType.HEADER;default:return a.FileType.TEXT}}r.generateVSProjectFiles=async function(){if(!t.workspace.name)return void t.window.showErrorMessage("No workspace is currently open.");const e=await t.window.showInputBox({prompt:"Enter the project name",value:t.workspace.name}),r=i.join(t.workspace.rootPath,e),n=i.join(r,e);try{o.mkdirSync(r,{recursive:!0}),o.mkdirSync(n,{recursive:!0})}catch(e){return void t.window.showErrorMessage("Error creating folders.")}try{!function(e,r,n){const t=i.join(__dirname,"assets");o.readdirSync(t).forEach((r=>{"template.sln"!==r&&r.startsWith("template.")&&o.copyFileSync(i.join(t,r),i.join(e,r))}));const c="template.sln";o.copyFileSync(i.join(t,c),i.join(r,c)),o.readdirSync(e).forEach((r=>{if(r.startsWith("template.")){const t=r.replace("template",n);o.renameSync(i.join(e,r),i.join(e,t))}}));const a=i.join(r,"template.sln"),s=i.join(r,`${n}.sln`);o.renameSync(a,s)}(n,r,e)}catch(e){return void t.window.showErrorMessage("Error copying files.")}try{!function(e,r){const n=i.join(r,`${e}.sln`);let t=o.readFileSync(n,"utf-8");t=t.replace(/NAME/g,e),t=t.replace(/PROJECTID/g,(0,c.generateGUID)()),t=t.replace(/SOLUTIONID/g,(0,c.generateGUID)()),o.writeFileSync(n,t,"utf-8")}(e,r)}catch(e){return void t.window.showErrorMessage("Error replacing IDs.")}try{!function(e,r){const n=[".cpp",".h",".dat",".txt"];o.readdirSync(e).forEach((t=>{const c=i.extname(t);n.includes(c)&&o.copyFileSync(i.join(e,t),i.join(r,t))})),o.readdirSync(e).forEach((r=>{const t=i.extname(r);n.includes(t)&&o.unlinkSync(i.join(e,r))}))}(t.workspace.rootPath,n)}catch(e){return void t.window.showErrorMessage("Error copying main files.")}try{!function(e,r){const n=[`${r}.vcxproj`,`${r}.vcxproj.filters`,`${r}.vcxproj.user`],t=o.readdirSync(e).filter((e=>!n.includes(e))).map((e=>({fileType:s(e),fileName:e})));const c=function(e,r){let n="\n  <ItemGroup>",t=n,o=n,i=n;for(let r of e)if(r)switch(r.fileType){case a.FileType.SOURCE:t+=`\n    <ClCompile Include="${r.fileName}">\n      <Filter>Source Files</Filter>\n    </ClCompile>`;break;case a.FileType.TEXT:o+=`\n    <Text Include="${r.fileName}">\n      <Filter>Source Files</Filter>\n    </Text>`;break;case a.FileType.HEADER:i+=`\n    <ClInclude Include="${r.fileName}">\n      <Filter>Header Files</Filter>\n    </ClInclude>`}return t!==n&&(t+="\n  </ItemGroup>",r+=t),o!==n&&(o+="\n  </ItemGroup>",r+=o),i!==n&&(i+="\n  </ItemGroup>",r+=i),r+="\n</Project>"}(t,""),l=function(e,r){let n="\n  <ItemGroup>",t=n,o=n,i=n;for(let r of e)if(r)switch(r.fileType){case a.FileType.SOURCE:t+=`\n    <ClCompile Include="${r.fileName}" />`;break;case a.FileType.TEXT:o+=`\n    <Text Include="${r.fileName}" />`;break;case a.FileType.HEADER:i+=`\n    <ClInclude Include="${r.fileName}" />`}return t!==n&&(t+="\n  </ItemGroup>",r+=t),o!==n&&(o+="\n  </ItemGroup>",r+=o),i!==n&&(i+="\n  </ItemGroup>",r+=i),r+='\n  <Import Project="$(VCTargetsPath)\\Microsoft.Cpp.targets" />\n  <ImportGroup Label="ExtensionTargets">\n  </ImportGroup>\n</Project>'}(t,"");o.appendFileSync(i.join(e,`${r}.vcxproj.filters`),c),o.appendFileSync(i.join(e,`${r}.vcxproj`),l)}(n,e)}catch(e){return void t.window.showErrorMessage("Error appending file types to filters.")}t.window.showInformationMessage("Visual Studio project files generated successfully")}},398:e=>{e.exports=require("vscode")},896:e=>{e.exports=require("fs")},928:e=>{e.exports=require("path")}},r={};function n(t){var o=r[t];if(void 0!==o)return o.exports;var i=r[t]={exports:{}};return e[t](i,i.exports,n),i.exports}var t={};(()=>{var e=t;Object.defineProperty(e,"__esModule",{value:!0}),e.deactivate=e.activate=void 0;const r=n(398),o=n(984);e.activate=function(e){let n=r.commands.registerCommand("extension.generateCppSolution",(async()=>{try{(0,o.generateVSProjectFiles)()}catch(e){r.window.showErrorMessage(`Error executing: ${e}`)}}));e.subscriptions.push(n)},e.deactivate=function(){}})(),module.exports=t})();